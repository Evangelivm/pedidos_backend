
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Caja_diariaScalarFieldEnum = {
  id: 'id',
  fecha: 'fecha',
  apertura: 'apertura',
  cierre: 'cierre',
  total_ventas: 'total_ventas',
  total_gastos: 'total_gastos',
  diferencia: 'diferencia',
  estado: 'estado',
  notas: 'notas',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.CategoriasScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  descripcion: 'descripcion',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ClientesScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  tipo_documento: 'tipo_documento',
  numero_documento: 'numero_documento',
  direccion: 'direccion',
  telefono: 'telefono',
  email: 'email',
  notas: 'notas',
  activo: 'activo',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.DespachosScalarFieldEnum = {
  id: 'id',
  pedido_id: 'pedido_id',
  fecha: 'fecha',
  direccion_entrega: 'direccion_entrega',
  contacto_entrega: 'contacto_entrega',
  telefono_entrega: 'telefono_entrega',
  estado: 'estado',
  notas: 'notas',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Detalle_entradas_mercaderiaScalarFieldEnum = {
  id: 'id',
  entrada_id: 'entrada_id',
  producto_id: 'producto_id',
  cantidad: 'cantidad',
  precio_unitario: 'precio_unitario',
  subtotal: 'subtotal',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Detalle_pedidosScalarFieldEnum = {
  id: 'id',
  pedido_id: 'pedido_id',
  producto_id: 'producto_id',
  cantidad: 'cantidad',
  precio_unitario: 'precio_unitario',
  subtotal: 'subtotal',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Entradas_mercaderiaScalarFieldEnum = {
  id: 'id',
  fecha: 'fecha',
  proveedor_id: 'proveedor_id',
  numero_factura: 'numero_factura',
  total: 'total',
  notas: 'notas',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.GastosScalarFieldEnum = {
  id: 'id',
  fecha: 'fecha',
  concepto: 'concepto',
  monto: 'monto',
  tipo: 'tipo',
  categoria: 'categoria',
  comprobante: 'comprobante',
  notas: 'notas',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Movimientos_cajaScalarFieldEnum = {
  id: 'id',
  caja_id: 'caja_id',
  fecha_hora: 'fecha_hora',
  tipo: 'tipo',
  concepto: 'concepto',
  monto: 'monto',
  referencia_id: 'referencia_id',
  referencia_tipo: 'referencia_tipo',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.PagosScalarFieldEnum = {
  id: 'id',
  pedido_id: 'pedido_id',
  fecha: 'fecha',
  monto: 'monto',
  metodo_pago: 'metodo_pago',
  referencia: 'referencia',
  notas: 'notas',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.PedidosScalarFieldEnum = {
  id: 'id',
  numero: 'numero',
  fecha: 'fecha',
  cliente_id: 'cliente_id',
  subtotal: 'subtotal',
  igv: 'igv',
  total: 'total',
  estado: 'estado',
  notas: 'notas',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.PresentacionesScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  descripcion: 'descripcion',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ProductosScalarFieldEnum = {
  id: 'id',
  codigo: 'codigo',
  descripcion: 'descripcion',
  categoria_id: 'categoria_id',
  presentacion_id: 'presentacion_id',
  precio_sugerido: 'precio_sugerido',
  precio_minimo: 'precio_minimo',
  stock: 'stock',
  stock_minimo: 'stock_minimo',
  imagen: 'imagen',
  activo: 'activo',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ProveedoresScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  ruc: 'ruc',
  direccion: 'direccion',
  telefono: 'telefono',
  email: 'email',
  contacto: 'contacto',
  notas: 'notas',
  activo: 'activo',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.caja_diariaOrderByRelevanceFieldEnum = {
  notas: 'notas'
};

exports.Prisma.categoriasOrderByRelevanceFieldEnum = {
  nombre: 'nombre',
  descripcion: 'descripcion'
};

exports.Prisma.clientesOrderByRelevanceFieldEnum = {
  nombre: 'nombre',
  numero_documento: 'numero_documento',
  direccion: 'direccion',
  telefono: 'telefono',
  email: 'email',
  notas: 'notas'
};

exports.Prisma.despachosOrderByRelevanceFieldEnum = {
  direccion_entrega: 'direccion_entrega',
  contacto_entrega: 'contacto_entrega',
  telefono_entrega: 'telefono_entrega',
  notas: 'notas'
};

exports.Prisma.entradas_mercaderiaOrderByRelevanceFieldEnum = {
  numero_factura: 'numero_factura',
  notas: 'notas'
};

exports.Prisma.gastosOrderByRelevanceFieldEnum = {
  concepto: 'concepto',
  categoria: 'categoria',
  comprobante: 'comprobante',
  notas: 'notas'
};

exports.Prisma.movimientos_cajaOrderByRelevanceFieldEnum = {
  concepto: 'concepto'
};

exports.Prisma.pagosOrderByRelevanceFieldEnum = {
  referencia: 'referencia',
  notas: 'notas'
};

exports.Prisma.pedidosOrderByRelevanceFieldEnum = {
  numero: 'numero',
  notas: 'notas'
};

exports.Prisma.presentacionesOrderByRelevanceFieldEnum = {
  nombre: 'nombre',
  descripcion: 'descripcion'
};

exports.Prisma.productosOrderByRelevanceFieldEnum = {
  codigo: 'codigo',
  descripcion: 'descripcion',
  imagen: 'imagen'
};

exports.Prisma.proveedoresOrderByRelevanceFieldEnum = {
  nombre: 'nombre',
  ruc: 'ruc',
  direccion: 'direccion',
  telefono: 'telefono',
  email: 'email',
  contacto: 'contacto',
  notas: 'notas'
};
exports.caja_diaria_estado = exports.$Enums.caja_diaria_estado = {
  ABIERTA: 'ABIERTA',
  CERRADA: 'CERRADA'
};

exports.clientes_tipo_documento = exports.$Enums.clientes_tipo_documento = {
  DNI: 'DNI',
  RUC: 'RUC',
  CE: 'CE',
  PASAPORTE: 'PASAPORTE',
  SD: 'SD'
};

exports.despachos_estado = exports.$Enums.despachos_estado = {
  PENDIENTE: 'PENDIENTE',
  EN_RUTA: 'EN_RUTA',
  ENTREGADO: 'ENTREGADO',
  CANCELADO: 'CANCELADO'
};

exports.gastos_tipo = exports.$Enums.gastos_tipo = {
  FIJO: 'FIJO',
  VARIABLE: 'VARIABLE'
};

exports.movimientos_caja_tipo = exports.$Enums.movimientos_caja_tipo = {
  INGRESO: 'INGRESO',
  EGRESO: 'EGRESO'
};

exports.movimientos_caja_referencia_tipo = exports.$Enums.movimientos_caja_referencia_tipo = {
  VENTA: 'VENTA',
  GASTO: 'GASTO',
  OTRO: 'OTRO'
};

exports.pagos_metodo_pago = exports.$Enums.pagos_metodo_pago = {
  EFECTIVO: 'EFECTIVO',
  TRANSFERENCIA: 'TRANSFERENCIA',
  TARJETA: 'TARJETA',
  YAPE: 'YAPE',
  PLIN: 'PLIN',
  OTRO: 'OTRO'
};

exports.pedidos_estado = exports.$Enums.pedidos_estado = {
  PENDIENTE: 'PENDIENTE',
  PAGADO: 'PAGADO',
  DESPACHADO: 'DESPACHADO',
  ANULADO: 'ANULADO'
};

exports.Prisma.ModelName = {
  caja_diaria: 'caja_diaria',
  categorias: 'categorias',
  clientes: 'clientes',
  despachos: 'despachos',
  detalle_entradas_mercaderia: 'detalle_entradas_mercaderia',
  detalle_pedidos: 'detalle_pedidos',
  entradas_mercaderia: 'entradas_mercaderia',
  gastos: 'gastos',
  movimientos_caja: 'movimientos_caja',
  pagos: 'pagos',
  pedidos: 'pedidos',
  presentaciones: 'presentaciones',
  productos: 'productos',
  proveedores: 'proveedores'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
